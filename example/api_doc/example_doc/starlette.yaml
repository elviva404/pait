group:
  root:
    group_list:
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/flask_example.py
        lineno: 29
        name: test_raise_tip
      method: []
      name: null
      path: ''
      request:
        default: Required
        description: Content-Type
        other: {}
        param_name: content__type
        type: string
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: &id002
              definitions:
                _BaseModel: &id004
                  properties:
                    age: &id007
                      description: age
                      exclusiveMaximum: 100
                      exclusiveMinimum: 1
                      title: Age
                      type: integer
                    content_type: &id008
                      description: content-type
                      title: Content Type
                      type: string
                    uid: &id005
                      description: user id
                      exclusiveMaximum: 1000
                      exclusiveMinimum: 10
                      title: Uid
                      type: integer
                    user_name: &id006
                      description: user name
                      maxLength: 4
                      minLength: 2
                      title: User Name
                      type: string
                  required:
                  - uid
                  - user_name
                  - age
                  - content_type
                  title: _BaseModel
                  type: object
              properties:
                code: &id001
                  default: 0
                  description: api code
                  title: Code
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/_BaseModel'
                  title: Data
                  type: array
                msg: &id003
                  default: success
                  description: api status msg
                  title: Msg
                  type: string
              required:
              - data
              title: ResponseUserModel
              type: object
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: &id010
              properties:
                code: &id009
                  default: 1
                  description: api code
                  title: Code
                  type: integer
                msg: &id011
                  default: fail
                  description: api status msg
                  title: Msg
                  type: string
              title: ResponseFailModel
              type: object
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: abandoned
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/flask_example.py
        lineno: 151
        name: test_model
      method: []
      name: null
      path: ''
      request:
        default: Required
        description: age
        other:
          exclusiveMaximum: 100
          exclusiveMinimum: 1
        param_name: age
        type: integer
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id002
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: test
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/starlette_example.py
        lineno: 29
        name: test_raise_tip
      method:
      - POST
      name: test_raise_tip
      path: /api/raise_tip
      request:
        default: Required
        description: content-type
        other: {}
        param_name: content_type
        type: string
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id002
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: abandoned
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/starlette_example.py
        lineno: 156
        name: test_pait_model
      method:
      - POST
      name: test_pait_model
      path: /api/pait_model
      request:
        default: Required
        description: age
        other:
          exclusiveMaximum: 100
          exclusiveMinimum: 1
        param_name: age
        type: integer
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id002
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: test
    name: root
  user:
    group_list:
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/flask_example.py
        lineno: 53
        name: test_post
      method: []
      name: null
      path: ''
      request:
        default: Required
        description: Content-Type
        other: {}
        param_name: Content-Type
        type: string
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id002
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/flask_example.py
        lineno: 77
        name: demo_get2test_depend
      method: []
      name: null
      path: ''
      request:
        default: Required
        description: age
        other:
          exclusiveMaximum: 100
          exclusiveMinimum: 1
        param_name: age
        type: integer
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id002
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/flask_example.py
        lineno: 101
        name: test_other_field
      method: []
      name: null
      path: ''
      request:
        default: Required
        description: cookie
        other: {}
        param_name: cookie
        type: object
      response_list: []
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/flask_example.py
        lineno: 127
        name: test_pait
      method: []
      name: null
      path: ''
      request:
        default: Required
        description: null
        other: {}
        param_name: age
        type: integer
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: &id013
              definitions:
                _BaseModel: &id015
                  properties:
                    age: &id019
                      description: age
                      exclusiveMaximum: 100
                      exclusiveMinimum: 1
                      title: Age
                      type: integer
                    email: &id018
                      description: user email
                      title: Email
                      type: string
                    uid: &id016
                      description: user id
                      exclusiveMaximum: 1000
                      exclusiveMinimum: 10
                      title: Uid
                      type: integer
                    user_name: &id017
                      description: user name
                      maxLength: 4
                      minLength: 2
                      title: User Name
                      type: string
                  required:
                  - uid
                  - user_name
                  - email
                  - age
                  title: _BaseModel
                  type: object
              properties:
                code: &id012
                  default: 0
                  description: api code
                  title: Code
                  type: integer
                data:
                  $ref: '#/definitions/_BaseModel'
                msg: &id014
                  default: success
                  description: api status msg
                  title: Msg
                  type: string
              required:
              - data
              title: _ResponseUserModel
              type: object
            schema: *id012
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id013
            schema: *id014
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id015
            schema: *id016
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id015
            schema: *id017
          type: string
        - default: Required
          description: user email
          other: {}
          param_name: data.email
          raw:
            param_name: email
            parent_schema: *id015
            schema: *id018
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id015
            schema: *id019
          type: integer
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/flask_example.py
        lineno: 170
        name: TestCbv.get
      method: []
      name: null
      path: ''
      request:
        default: Required
        description: ua
        other: {}
        param_name: user-agent
        type: string
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id013
            schema: *id012
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id013
            schema: *id014
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id015
            schema: *id016
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id015
            schema: *id017
          type: string
        - default: Required
          description: user email
          other: {}
          param_name: data.email
          raw:
            param_name: email
            parent_schema: *id015
            schema: *id018
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id015
            schema: *id019
          type: integer
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/flask_example.py
        lineno: 192
        name: TestCbv.post
      method: []
      name: null
      path: ''
      request:
        default: Required
        description: ua
        other: {}
        param_name: user-agent
        type: string
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id002
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/starlette_example.py
        lineno: 54
        name: test_post
      method:
      - POST
      name: test_post
      path: /api/post
      request:
        default: Required
        description: content-type
        other: {}
        param_name: Content-Type
        type: string
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id002
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/starlette_example.py
        lineno: 79
        name: test_depend
      method:
      - POST
      name: test_depend
      path: /api/depend
      request:
        default: Required
        description: age
        other:
          exclusiveMaximum: 100
          exclusiveMinimum: 1
        param_name: age
        type: integer
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id002
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/starlette_example.py
        lineno: 104
        name: test_get
      method:
      - GET
      - HEAD
      name: test_get
      path: /api/get/{age}
      request:
        default: Required
        description: age
        other: {}
        param_name: age
        type: integer
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id013
            schema: *id012
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id013
            schema: *id014
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id015
            schema: *id016
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id015
            schema: *id017
          type: string
        - default: Required
          description: user email
          other: {}
          param_name: data.email
          raw:
            param_name: email
            parent_schema: *id015
            schema: *id018
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id015
            schema: *id019
          type: integer
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/starlette_example.py
        lineno: 129
        name: test_other_field
      method:
      - POST
      name: test_other_field
      path: /api/other_field
      request:
        default: Required
        description: cookie
        other: {}
        param_name: cookie
        type: object
      response_list: []
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/starlette_example.py
        lineno: 176
        name: TestCbv.get
      method:
      - get
      name: TestCbv.get
      path: /api/cbv
      request:
        default: Required
        description: ua
        other: {}
        param_name: user-agent
        type: string
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id013
            schema: *id012
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id013
            schema: *id014
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id015
            schema: *id016
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id015
            schema: *id017
          type: string
        - default: Required
          description: user email
          other: {}
          param_name: data.email
          raw:
            param_name: email
            parent_schema: *id015
            schema: *id018
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id015
            schema: *id019
          type: integer
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    - author: so1n
      func:
        file: /home/so1n/github/pait/example/param_verify/starlette_example.py
        lineno: 200
        name: TestCbv.post
      method:
      - post
      name: TestCbv.post
      path: /api/cbv
      request:
        default: Required
        description: ua
        other: {}
        param_name: user-agent
        type: string
      response_list:
      - description: success response
        header:
          cookie: xxx
        media_type: application/json
        response_data:
        - default: 0
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id002
            schema: *id001
          type: integer
        - default: success
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id002
            schema: *id003
          type: string
        - default: Required
          description: user id
          other:
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
          param_name: data.uid
          raw:
            param_name: uid
            parent_schema: *id004
            schema: *id005
          type: integer
        - default: Required
          description: user name
          other:
            maxLength: 4
            minLength: 2
          param_name: data.user_name
          raw:
            param_name: user_name
            parent_schema: *id004
            schema: *id006
          type: string
        - default: Required
          description: age
          other:
            exclusiveMaximum: 100
            exclusiveMinimum: 1
          param_name: data.age
          raw:
            param_name: age
            parent_schema: *id004
            schema: *id007
          type: integer
        - default: Required
          description: content-type
          other: {}
          param_name: data.content_type
          raw:
            param_name: content_type
            parent_schema: *id004
            schema: *id008
          type: string
        status_code: '200'
      - description: fail response
        header: {}
        media_type: application/json
        response_data:
        - default: 1
          description: api code
          other: {}
          param_name: code
          raw:
            param_name: code
            parent_schema: *id010
            schema: *id009
          type: integer
        - default: fail
          description: api status msg
          other: {}
          param_name: msg
          raw:
            param_name: msg
            parent_schema: *id010
            schema: *id011
          type: string
        status_code: '200'
      status: release
    name: user
title: Pait Yaml
