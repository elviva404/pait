{"openapi": "3.0.0", "info": {"title": "Pait Doc", "version": "0.0.1"}, "servers": [{"url": "http://127.0.0.1"}], "tags": [{"name": "test", "description": "test api"}, {"name": "user", "description": "user api"}, {"name": "get", "description": ""}, {"name": "depend", "description": ""}, {"name": "post", "description": ""}], "paths": {"/api/other_field": {"post": {"tags": ["user", "get"], "summary": "", "description": "", "operationId": "POST.test_other_field", "parameters": [{"name": "cookie", "in": "cookie", "required": true, "description": "cookie", "schema": {"title": "Cookie", "description": "cookie", "type": "object"}}], "responses": {}, "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"title": "TESTOTHERFIELDDynamicModel", "type": "object", "properties": {"a": {"title": "A", "description": "form data", "type": "string"}, "b": {"title": "B", "description": "form data", "type": "string"}}, "required": ["a", "b"]}}}}}, "options": {"tags": ["user", "get"], "summary": "", "description": "", "operationId": "OPTIONS.test_other_field", "parameters": [{"name": "cookie", "in": "cookie", "required": true, "description": "cookie", "schema": {"title": "Cookie", "description": "cookie", "type": "object"}}], "responses": {}, "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"title": "TESTOTHERFIELDDynamicModel", "type": "object", "properties": {"a": {"title": "A", "description": "form data", "type": "string"}, "b": {"title": "B", "description": "form data", "type": "string"}}, "required": ["a", "b"]}}}}}}, "/api/depend": {"post": {"tags": ["user", "depend"], "summary": "", "description": "Test Method:Post request, Pydantic Model", "operationId": "POST.demo_get2test_depend", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": {"title": "DEMOGET2TESTDEPENDDynamicModel", "type": "object", "properties": {"age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, "required": ["age"]}}}}}, "options": {"tags": ["user", "depend"], "summary": "", "description": "Test Method:Post request, Pydantic Model", "operationId": "OPTIONS.demo_get2test_depend", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": {"title": "DEMOGET2TESTDEPENDDynamicModel", "type": "object", "properties": {"age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, "required": ["age"]}}}}}}, "/api/post": {"post": {"tags": ["user", "post"], "summary": "", "description": "Test Method:Post Pydantic Model", "operationId": "POST.test_post", "parameters": [{"name": "requestBody.content.<media-type>", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content-Type", "description": "Content-Type", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": {"title": "TESTPOSTDynamicModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}, "sex": {"description": "sex", "allOf": [{"$ref": "#/components/schemas/SexEnum"}]}}, "required": ["uid", "user_name", "age", "sex"]}}}}}, "options": {"tags": ["user", "post"], "summary": "", "description": "Test Method:Post Pydantic Model", "operationId": "OPTIONS.test_post", "parameters": [{"name": "requestBody.content.<media-type>", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content-Type", "description": "Content-Type", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": {"title": "TESTPOSTDynamicModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}, "sex": {"description": "sex", "allOf": [{"$ref": "#/components/schemas/SexEnum"}]}}, "required": ["uid", "user_name", "age", "sex"]}}}}}}, "/api/cbv": {"get": {"tags": ["user", "get"], "summary": "", "description": "Text Pydantic Model and Field", "operationId": "get.test_cbv.get", "parameters": [{"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "email", "schema": {"title": "Email", "description": "email", "default": "example@xxx.com", "type": "string"}}, {"name": "user-agent", "in": "header", "required": true, "description": "ua", "schema": {"title": "User-Agent", "description": "ua", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/_ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}}, "post": {"tags": ["user", "post"], "summary": "", "description": "test cbv post method", "operationId": "post.test_cbv.post", "parameters": [{"name": "user-agent", "in": "header", "required": true, "description": "ua", "schema": {"title": "User-Agent", "description": "ua", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": {"title": "TESTCBV.POSTDynamicModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["uid", "user_name", "age"]}}}}}}, "/api/get/<age>": {"options": {"tags": ["user", "get"], "summary": "", "description": "Test Field", "operationId": "OPTIONS.test_pait", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"]}}, {"name": "age", "in": "path", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/_ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}}, "head": {"tags": ["user", "get"], "summary": "", "description": "Test Field", "operationId": "HEAD.test_pait", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"]}}, {"name": "age", "in": "path", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/_ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}}, "get": {"tags": ["user", "get"], "summary": "", "description": "Test Field", "operationId": "GET.test_pait", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"]}}, {"name": "age", "in": "path", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/_ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}}}, "/api/pait_model": {"post": {"tags": ["test"], "summary": "", "description": "Test Field", "operationId": "POST.test_model", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": {"title": "TESTMODELDynamicModel", "type": "object", "properties": {"age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, "required": ["age"]}}}}}, "options": {"tags": ["test"], "summary": "", "description": "Test Field", "operationId": "OPTIONS.test_model", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": {"title": "TESTMODELDynamicModel", "type": "object", "properties": {"age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, "required": ["age"]}}}}}}, "/api/raise_tip": {"post": {"tags": ["test"], "deprecated": true, "summary": "", "description": "test pait raise tip", "operationId": "POST.test_raise_tip", "parameters": [{"name": "content__type", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content  Type", "description": "Content-Type", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": {"title": "TESTRAISETIPDynamicModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["uid", "user_name", "age"]}}}}}, "options": {"tags": ["test"], "deprecated": true, "summary": "", "description": "test pait raise tip", "operationId": "OPTIONS.test_raise_tip", "parameters": [{"name": "content__type", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content  Type", "description": "Content-Type", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ResponseUserModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": {"title": "TESTRAISETIPDynamicModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["uid", "user_name", "age"]}}}}}}}, "components": {"schemas": {"_BaseModel": {"title": "_BaseModel", "type": "object", "properties": {"uid": {"title": "Uid", "description": "user id", "default": 6666666666, "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}, "user_name": {"title": "User Name", "description": "user name", "default": "mock_name", "maxLength": 4, "minLength": 2, "type": "string"}, "age": {"title": "Age", "description": "age", "default": 99, "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}, "content_type": {"title": "Content Type", "description": "content-type", "default": "application/json", "type": "string"}}}, "ResponseUserModel": {"title": "ResponseUserModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 0, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "success", "type": "string"}, "data": {"title": "Data", "type": "array", "items": {"$ref": "#/components/schemas/_BaseModel"}}}, "required": ["data"]}, "ResponseFailModel": {"title": "ResponseFailModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 1, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "fail", "type": "string"}}}, "SexEnum": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"]}, "_ResponseUserModel": {"title": "_ResponseUserModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 0, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "success", "type": "string"}, "data": {"$ref": "#/components/schemas/_BaseModel"}}, "required": ["data"]}}}}