{"openapi": "3.0.0", "info": {"title": "Pait Doc", "version": "0.0.1"}, "servers": [{"url": "http://127.0.0.1"}], "tags": [{"name": "default", "description": ""}], "paths": {"/api/raise_tip": {"options": {"tags": ["default"], "deprecated": true, "summary": "test pait raise tip", "operationId": "test_raise_tip", "parameters": [{"name": "content__type", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content  Type", "description": "Content-Type", "type": "string"}}], "responses": {}, "requestBody": {"content": {"application/json": {"schema": {"title": "DynamicFoobarModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["uid", "user_name", "age"]}}}}}, "post": {"tags": ["default"], "deprecated": true, "summary": "test pait raise tip", "operationId": "test_raise_tip", "parameters": [{"name": "content__type", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content  Type", "description": "Content-Type", "type": "string"}}], "responses": {}, "requestBody": {"content": {"application/json": {"schema": {"title": "DynamicFoobarModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["uid", "user_name", "age"]}}}}}}, "/api/pait_model": {"options": {"tags": ["default"], "summary": "Test Field", "operationId": "test_model", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {}}, "head": {"tags": ["default"], "summary": "Test Field", "operationId": "test_model", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {}}, "get": {"tags": ["default"], "summary": "Test Field", "operationId": "test_model", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {}}}, "/api/post": {"options": {"tags": ["default"], "summary": "Test Method:Post Pydantic Model", "operationId": "test_post", "parameters": [{"name": "requestBody.content.<media-type>", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content-Type", "description": "Content-Type", "type": "string"}}], "responses": {}, "requestBody": {"content": {"application/json": {"schema": {"title": "DynamicFoobarModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["uid", "user_name", "age"]}}}}}, "post": {"tags": ["default"], "summary": "Test Method:Post Pydantic Model", "operationId": "test_post", "parameters": [{"name": "requestBody.content.<media-type>", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content-Type", "description": "Content-Type", "type": "string"}}], "responses": {}, "requestBody": {"content": {"application/json": {"schema": {"title": "DynamicFoobarModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["uid", "user_name", "age"]}}}}}}, "/api/depend": {"options": {"tags": ["default"], "summary": "Test Method:Post request, Pydantic Model", "operationId": "demo_get2test_depend", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {}}, "head": {"tags": ["default"], "summary": "Test Method:Post request, Pydantic Model", "operationId": "demo_get2test_depend", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {}}, "get": {"tags": ["default"], "summary": "Test Method:Post request, Pydantic Model", "operationId": "demo_get2test_depend", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {}}}, "/api/get/<age>": {"options": {"tags": ["default"], "summary": "Test Field", "operationId": "test_pait", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"]}}, {"name": "age", "in": "path", "required": true, "description": null, "schema": {"title": "Age", "type": "string"}}], "responses": {}}, "head": {"tags": ["default"], "summary": "Test Field", "operationId": "test_pait", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"]}}, {"name": "age", "in": "path", "required": true, "description": null, "schema": {"title": "Age", "type": "string"}}], "responses": {}}, "get": {"tags": ["default"], "summary": "Test Field", "operationId": "test_pait", "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"]}}, {"name": "age", "in": "path", "required": true, "description": null, "schema": {"title": "Age", "type": "string"}}], "responses": {}}}, "/api/cbv": {"get": {"tags": ["default"], "summary": "Text Pydantic Model and Field", "operationId": "test_cbv.get", "parameters": [{"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "email", "schema": {"title": "Email", "description": "email", "default": "example@xxx.com", "type": "string"}}, {"name": "user-agent", "in": "header", "required": true, "description": "ua", "schema": {"title": "User-Agent", "description": "ua", "type": "string"}}], "responses": {}}, "post": {"tags": ["default"], "summary": "test cbv post method", "operationId": "test_cbv.post", "parameters": [{"name": "user-agent", "in": "header", "required": true, "description": "ua", "schema": {"title": "User-Agent", "description": "ua", "type": "string"}}], "responses": {}, "requestBody": {"content": {"application/json": {"schema": {"title": "DynamicFoobarModel", "type": "object", "properties": {"uid": {"title": "Uid", "type": "integer"}, "user_name": {"title": "User Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["uid", "user_name", "age"]}}}}}}}, "components": {"schemas": {}}}