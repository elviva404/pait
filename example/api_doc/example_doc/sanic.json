{
  "group": {
    "root": {
      "name": "root",
      "group_list": [
        {
          "name": "pait.test_raise_tip",
          "status": "abandoned",
          "author": "so1n",
          "func": {
            "file": "/home/so1n/github/pait/example/param_verify/sanic_example.py",
            "lineno": 31,
            "name": "test_raise_tip"
          },
          "path": "api/raise_tip",
          "method": [
            "POST"
          ],
          "request": {
            "param_name": "content_type",
            "description": "content-type",
            "default": "Required",
            "type": "string",
            "other": {}
          },
          "response_list": [
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "success response",
              "header": {
                "cookie": "xxx"
              },
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 0,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 0,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "title": "Data",
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/_BaseModel"
                          }
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            },
                            "content_type": {
                              "title": "Content Type",
                              "description": "content-type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "age",
                            "content_type"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "success",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "success",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "title": "Data",
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/_BaseModel"
                          }
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            },
                            "content_type": {
                              "title": "Content Type",
                              "description": "content-type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "age",
                            "content_type"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "data.uid",
                  "description": "user id",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 10,
                    "exclusiveMaximum": 1000
                  },
                  "raw": {
                    "param_name": "uid",
                    "schema": {
                      "title": "Uid",
                      "description": "user id",
                      "exclusiveMinimum": 10,
                      "exclusiveMaximum": 1000,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.user_name",
                  "description": "user name",
                  "default": "Required",
                  "type": "string",
                  "other": {
                    "maxLength": 4,
                    "minLength": 2
                  },
                  "raw": {
                    "param_name": "user_name",
                    "schema": {
                      "title": "User Name",
                      "description": "user name",
                      "maxLength": 4,
                      "minLength": 2,
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.age",
                  "description": "age",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 1,
                    "exclusiveMaximum": 100
                  },
                  "raw": {
                    "param_name": "age",
                    "schema": {
                      "title": "Age",
                      "description": "age",
                      "exclusiveMinimum": 1,
                      "exclusiveMaximum": 100,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.content_type",
                  "description": "content-type",
                  "default": "Required",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "content_type",
                    "schema": {
                      "title": "Content Type",
                      "description": "content-type",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "fail response",
              "header": {},
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 1,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 1,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "fail",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "fail",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "pait.test_pait_model",
          "status": "test",
          "author": "so1n",
          "func": {
            "file": "/home/so1n/github/pait/example/param_verify/sanic_example.py",
            "lineno": 149,
            "name": "test_pait_model"
          },
          "path": "api/pait_model",
          "method": [
            "POST"
          ],
          "request": {
            "param_name": "age",
            "description": "age",
            "default": "Required",
            "type": "integer",
            "other": {
              "exclusiveMinimum": 1,
              "exclusiveMaximum": 100
            }
          },
          "response_list": [
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "success response",
              "header": {
                "cookie": "xxx"
              },
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 0,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 0,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "title": "Data",
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/_BaseModel"
                          }
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            },
                            "content_type": {
                              "title": "Content Type",
                              "description": "content-type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "age",
                            "content_type"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "success",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "success",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "title": "Data",
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/_BaseModel"
                          }
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            },
                            "content_type": {
                              "title": "Content Type",
                              "description": "content-type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "age",
                            "content_type"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "data.uid",
                  "description": "user id",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 10,
                    "exclusiveMaximum": 1000
                  },
                  "raw": {
                    "param_name": "uid",
                    "schema": {
                      "title": "Uid",
                      "description": "user id",
                      "exclusiveMinimum": 10,
                      "exclusiveMaximum": 1000,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.user_name",
                  "description": "user name",
                  "default": "Required",
                  "type": "string",
                  "other": {
                    "maxLength": 4,
                    "minLength": 2
                  },
                  "raw": {
                    "param_name": "user_name",
                    "schema": {
                      "title": "User Name",
                      "description": "user name",
                      "maxLength": 4,
                      "minLength": 2,
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.age",
                  "description": "age",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 1,
                    "exclusiveMaximum": 100
                  },
                  "raw": {
                    "param_name": "age",
                    "schema": {
                      "title": "Age",
                      "description": "age",
                      "exclusiveMinimum": 1,
                      "exclusiveMaximum": 100,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.content_type",
                  "description": "content-type",
                  "default": "Required",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "content_type",
                    "schema": {
                      "title": "Content Type",
                      "description": "content-type",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "fail response",
              "header": {},
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 1,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 1,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "fail",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "fail",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    "user": {
      "name": "user",
      "group_list": [
        {
          "name": "pait.test_post",
          "status": "release",
          "author": "so1n",
          "func": {
            "file": "/home/so1n/github/pait/example/param_verify/sanic_example.py",
            "lineno": 50,
            "name": "test_post"
          },
          "path": "api/post",
          "method": [
            "POST"
          ],
          "request": {
            "param_name": "Content-Type",
            "description": "content-type",
            "default": "Required",
            "type": "string",
            "other": {}
          },
          "response_list": [
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "success response",
              "header": {
                "cookie": "xxx"
              },
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 0,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 0,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "title": "Data",
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/_BaseModel"
                          }
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            },
                            "content_type": {
                              "title": "Content Type",
                              "description": "content-type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "age",
                            "content_type"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "success",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "success",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "title": "Data",
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/_BaseModel"
                          }
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            },
                            "content_type": {
                              "title": "Content Type",
                              "description": "content-type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "age",
                            "content_type"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "data.uid",
                  "description": "user id",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 10,
                    "exclusiveMaximum": 1000
                  },
                  "raw": {
                    "param_name": "uid",
                    "schema": {
                      "title": "Uid",
                      "description": "user id",
                      "exclusiveMinimum": 10,
                      "exclusiveMaximum": 1000,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.user_name",
                  "description": "user name",
                  "default": "Required",
                  "type": "string",
                  "other": {
                    "maxLength": 4,
                    "minLength": 2
                  },
                  "raw": {
                    "param_name": "user_name",
                    "schema": {
                      "title": "User Name",
                      "description": "user name",
                      "maxLength": 4,
                      "minLength": 2,
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.age",
                  "description": "age",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 1,
                    "exclusiveMaximum": 100
                  },
                  "raw": {
                    "param_name": "age",
                    "schema": {
                      "title": "Age",
                      "description": "age",
                      "exclusiveMinimum": 1,
                      "exclusiveMaximum": 100,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.content_type",
                  "description": "content-type",
                  "default": "Required",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "content_type",
                    "schema": {
                      "title": "Content Type",
                      "description": "content-type",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "fail response",
              "header": {},
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 1,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 1,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "fail",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "fail",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "pait.test_depend",
          "status": "release",
          "author": "so1n",
          "func": {
            "file": "/home/so1n/github/pait/example/param_verify/sanic_example.py",
            "lineno": 69,
            "name": "test_depend"
          },
          "path": "api/depend",
          "method": [
            "POST"
          ],
          "request": {
            "param_name": "age",
            "description": "age",
            "default": "Required",
            "type": "integer",
            "other": {
              "exclusiveMinimum": 1,
              "exclusiveMaximum": 100
            }
          },
          "response_list": [
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "success response",
              "header": {
                "cookie": "xxx"
              },
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 0,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 0,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "title": "Data",
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/_BaseModel"
                          }
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            },
                            "content_type": {
                              "title": "Content Type",
                              "description": "content-type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "age",
                            "content_type"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "success",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "success",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "title": "Data",
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/_BaseModel"
                          }
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            },
                            "content_type": {
                              "title": "Content Type",
                              "description": "content-type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "age",
                            "content_type"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "data.uid",
                  "description": "user id",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 10,
                    "exclusiveMaximum": 1000
                  },
                  "raw": {
                    "param_name": "uid",
                    "schema": {
                      "title": "Uid",
                      "description": "user id",
                      "exclusiveMinimum": 10,
                      "exclusiveMaximum": 1000,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.user_name",
                  "description": "user name",
                  "default": "Required",
                  "type": "string",
                  "other": {
                    "maxLength": 4,
                    "minLength": 2
                  },
                  "raw": {
                    "param_name": "user_name",
                    "schema": {
                      "title": "User Name",
                      "description": "user name",
                      "maxLength": 4,
                      "minLength": 2,
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.age",
                  "description": "age",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 1,
                    "exclusiveMaximum": 100
                  },
                  "raw": {
                    "param_name": "age",
                    "schema": {
                      "title": "Age",
                      "description": "age",
                      "exclusiveMinimum": 1,
                      "exclusiveMaximum": 100,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.content_type",
                  "description": "content-type",
                  "default": "Required",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "content_type",
                    "schema": {
                      "title": "Content Type",
                      "description": "content-type",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        },
                        "content_type": {
                          "title": "Content Type",
                          "description": "content-type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "age",
                        "content_type"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "fail response",
              "header": {},
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 1,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 1,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "fail",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "fail",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "pait.test_other_field",
          "status": "release",
          "author": "so1n",
          "func": {
            "file": "/home/so1n/github/pait/example/param_verify/sanic_example.py",
            "lineno": 120,
            "name": "test_other_field"
          },
          "path": "api/other_field",
          "method": [
            "POST"
          ],
          "request": {
            "param_name": "cookie",
            "description": "cookie",
            "default": "Required",
            "type": "object",
            "other": {}
          },
          "response_list": []
        },
        {
          "name": "pait.TestCbv",
          "status": "release",
          "author": "so1n",
          "func": {
            "file": "/home/so1n/github/pait/example/param_verify/sanic_example.py",
            "lineno": 160,
            "name": "TestCbv.get"
          },
          "path": "api/cbv",
          "method": [
            "POST"
          ],
          "request": {
            "param_name": "user-agent",
            "description": "ua",
            "default": "Required",
            "type": "string",
            "other": {}
          },
          "response_list": [
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "success response",
              "header": {
                "cookie": "xxx"
              },
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 0,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 0,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "$ref": "#/definitions/_BaseModel"
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "email": {
                              "title": "Email",
                              "description": "user email",
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "email",
                            "age"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "success",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "success",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "$ref": "#/definitions/_BaseModel"
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "email": {
                              "title": "Email",
                              "description": "user email",
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "email",
                            "age"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "data.uid",
                  "description": "user id",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 10,
                    "exclusiveMaximum": 1000
                  },
                  "raw": {
                    "param_name": "uid",
                    "schema": {
                      "title": "Uid",
                      "description": "user id",
                      "exclusiveMinimum": 10,
                      "exclusiveMaximum": 1000,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "description": "user email",
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "email",
                        "age"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.user_name",
                  "description": "user name",
                  "default": "Required",
                  "type": "string",
                  "other": {
                    "maxLength": 4,
                    "minLength": 2
                  },
                  "raw": {
                    "param_name": "user_name",
                    "schema": {
                      "title": "User Name",
                      "description": "user name",
                      "maxLength": 4,
                      "minLength": 2,
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "description": "user email",
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "email",
                        "age"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.email",
                  "description": "user email",
                  "default": "Required",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "email",
                    "schema": {
                      "title": "Email",
                      "description": "user email",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "description": "user email",
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "email",
                        "age"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.age",
                  "description": "age",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 1,
                    "exclusiveMaximum": 100
                  },
                  "raw": {
                    "param_name": "age",
                    "schema": {
                      "title": "Age",
                      "description": "age",
                      "exclusiveMinimum": 1,
                      "exclusiveMaximum": 100,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "description": "user email",
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "email",
                        "age"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "fail response",
              "header": {},
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 1,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 1,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "fail",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "fail",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "pait.test_get",
          "status": "release",
          "author": "so1n",
          "func": {
            "file": "/home/so1n/github/pait/example/param_verify/sanic_example.py",
            "lineno": 88,
            "name": "test_get"
          },
          "path": "api/get/<age>",
          "method": [
            "GET"
          ],
          "request": {
            "param_name": "multi_user_name",
            "description": "user name",
            "default": "Required",
            "type": "array",
            "other": {
              "maxLength": 4,
              "minLength": 2,
              "items": {
                "type": "string",
                "minLength": 2,
                "maxLength": 4
              }
            }
          },
          "response_list": [
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "success response",
              "header": {
                "cookie": "xxx"
              },
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 0,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 0,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "$ref": "#/definitions/_BaseModel"
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "email": {
                              "title": "Email",
                              "description": "user email",
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "email",
                            "age"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "success",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "success",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_ResponseUserModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 0,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "success",
                          "type": "string"
                        },
                        "data": {
                          "$ref": "#/definitions/_BaseModel"
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "definitions": {
                        "_BaseModel": {
                          "title": "_BaseModel",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "title": "Uid",
                              "description": "user id",
                              "exclusiveMinimum": 10,
                              "exclusiveMaximum": 1000,
                              "type": "integer"
                            },
                            "user_name": {
                              "title": "User Name",
                              "description": "user name",
                              "maxLength": 4,
                              "minLength": 2,
                              "type": "string"
                            },
                            "email": {
                              "title": "Email",
                              "description": "user email",
                              "type": "string"
                            },
                            "age": {
                              "title": "Age",
                              "description": "age",
                              "exclusiveMinimum": 1,
                              "exclusiveMaximum": 100,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "uid",
                            "user_name",
                            "email",
                            "age"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "data.uid",
                  "description": "user id",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 10,
                    "exclusiveMaximum": 1000
                  },
                  "raw": {
                    "param_name": "uid",
                    "schema": {
                      "title": "Uid",
                      "description": "user id",
                      "exclusiveMinimum": 10,
                      "exclusiveMaximum": 1000,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "description": "user email",
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "email",
                        "age"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.user_name",
                  "description": "user name",
                  "default": "Required",
                  "type": "string",
                  "other": {
                    "maxLength": 4,
                    "minLength": 2
                  },
                  "raw": {
                    "param_name": "user_name",
                    "schema": {
                      "title": "User Name",
                      "description": "user name",
                      "maxLength": 4,
                      "minLength": 2,
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "description": "user email",
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "email",
                        "age"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.email",
                  "description": "user email",
                  "default": "Required",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "email",
                    "schema": {
                      "title": "Email",
                      "description": "user email",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "description": "user email",
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "email",
                        "age"
                      ]
                    }
                  }
                },
                {
                  "param_name": "data.age",
                  "description": "age",
                  "default": "Required",
                  "type": "integer",
                  "other": {
                    "exclusiveMinimum": 1,
                    "exclusiveMaximum": 100
                  },
                  "raw": {
                    "param_name": "age",
                    "schema": {
                      "title": "Age",
                      "description": "age",
                      "exclusiveMinimum": 1,
                      "exclusiveMaximum": 100,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "_BaseModel",
                      "type": "object",
                      "properties": {
                        "uid": {
                          "title": "Uid",
                          "description": "user id",
                          "exclusiveMinimum": 10,
                          "exclusiveMaximum": 1000,
                          "type": "integer"
                        },
                        "user_name": {
                          "title": "User Name",
                          "description": "user name",
                          "maxLength": 4,
                          "minLength": 2,
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "description": "user email",
                          "type": "string"
                        },
                        "age": {
                          "title": "Age",
                          "description": "age",
                          "exclusiveMinimum": 1,
                          "exclusiveMaximum": 100,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "uid",
                        "user_name",
                        "email",
                        "age"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "status_code": "200",
              "media_type": "application/json",
              "description": "fail response",
              "header": {},
              "response_data": [
                {
                  "param_name": "code",
                  "description": "api code",
                  "default": 1,
                  "type": "integer",
                  "other": {},
                  "raw": {
                    "param_name": "code",
                    "schema": {
                      "title": "Code",
                      "description": "api code",
                      "default": 1,
                      "type": "integer"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "param_name": "msg",
                  "description": "api status msg",
                  "default": "fail",
                  "type": "string",
                  "other": {},
                  "raw": {
                    "param_name": "msg",
                    "schema": {
                      "title": "Msg",
                      "description": "api status msg",
                      "default": "fail",
                      "type": "string"
                    },
                    "parent_schema": {
                      "title": "ResponseFailModel",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "description": "api code",
                          "default": 1,
                          "type": "integer"
                        },
                        "msg": {
                          "title": "Msg",
                          "description": "api status msg",
                          "default": "fail",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  },
  "title": "Pait Json"
}
