openapi: 3.0.0
info:
  title: Pait Doc
  version: 0.0.1
servers:
- url: http://127.0.0.1
tags:
- name: test
  description: test api
- name: user
  description: user api
- name: get
  description: ''
- name: depend
  description: ''
- name: post
  description: ''
paths:
  /api/check_depend_contextmanager:
    get:
      tags:
      - test
      summary: ''
      description: ''
      operationId: GET.test_depend_contextmanager
      parameters:
      - name: uid
        in: query
        required: true
        description: user id
        schema:
          title: Uid
          description: user id
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          type: integer
      - name: is_raise
        in: query
        required: false
        description: ''
        schema:
          title: Is Raise
          default: false
          type: boolean
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ResponseModel'
                - $ref: '#/components/schemas/ResponseFailModel'
  /api/pait_model:
    post:
      tags:
      - test
      summary: ''
      description: Test Field
      operationId: POST.test_model
      parameters:
      - name: uid
        in: query
        required: true
        description: user id
        schema:
          title: Uid
          description: user id
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          type: integer
      - name: user_name
        in: query
        required: true
        description: user name
        schema:
          title: User Name
          description: user name
          maxLength: 4
          minLength: 2
          type: string
      - name: user-agent
        in: header
        required: true
        description: user agent
        schema:
          title: User-Agent
          description: user agent
          type: string
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ResponseUserModel'
                - $ref: '#/components/schemas/ResponseFailModel'
      requestBody:
        content:
          application/json:
            schema:
              title: TESTMODELDynamicModel
              type: object
              properties:
                age:
                  title: Age
                  description: age
                  exclusiveMinimum: 1
                  exclusiveMaximum: 100
                  type: integer
              required:
              - age
  /api/raise_tip:
    post:
      tags:
      - test
      deprecated: true
      summary: ''
      description: test pait raise tip
      operationId: POST.test_raise_tip
      parameters:
      - name: content__type
        in: header
        required: true
        description: Content-Type
        schema:
          title: Content  Type
          description: Content-Type
          type: string
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ResponseUserModel'
                - $ref: '#/components/schemas/ResponseFailModel'
      requestBody:
        content:
          application/json:
            schema:
              title: TESTRAISETIPDynamicModel
              type: object
              properties:
                uid:
                  title: Uid
                  type: integer
                user_name:
                  title: User Name
                  type: string
                age:
                  title: Age
                  type: integer
              required:
              - uid
              - user_name
              - age
  /api/other_field:
    post:
      tags:
      - user
      - get
      summary: ''
      description: ''
      operationId: POST.test_other_field
      parameters:
      - name: cookie
        in: cookie
        required: true
        description: cookie
        schema:
          title: Cookie
          description: cookie
          type: object
      responses: {}
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              title: TESTOTHERFIELDDynamicModel
              type: object
              properties:
                a:
                  title: A
                  description: form data
                  type: string
                b:
                  title: B
                  description: form data
                  type: string
              required:
              - a
              - b
  /api/check_param:
    get:
      tags:
      - user
      - get
      summary: ''
      description: Test check param
      operationId: GET.test_check_param
      parameters:
      - name: uid
        in: query
        required: true
        description: user id
        schema:
          title: Uid
          description: user id
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          type: integer
      - name: email
        in: query
        required: false
        description: user email
        schema:
          title: Email
          description: user email
          default: example@xxx.com
          type: string
      - name: user_name
        in: query
        required: false
        description: user name
        schema:
          title: User Name
          description: user name
          maxLength: 4
          minLength: 2
          type: string
      - name: alias_user_name
        in: query
        required: false
        description: user name
        schema:
          title: Alias User Name
          description: user name
          maxLength: 4
          minLength: 2
          type: string
      - name: age
        in: query
        required: true
        description: age
        schema:
          title: Age
          description: age
          exclusiveMinimum: 1
          exclusiveMaximum: 100
          type: integer
      - name: birthday
        in: query
        required: false
        description: birthday
        schema:
          title: Birthday
          description: birthday
          type: string
      - name: sex
        in: query
        required: false
        description: sex
        schema:
          title: SexEnum
          description: An enumeration.
          enum:
          - man
          - woman
          type: string
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UserResponseModel2'
                - $ref: '#/components/schemas/ResponseFailModel'
  /api/check_resp:
    get:
      tags:
      - user
      - get
      summary: ''
      description: Test check param
      operationId: GET.test_check_response
      parameters:
      - name: uid
        in: query
        required: true
        description: user id
        schema:
          title: Uid
          description: user id
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          type: integer
      - name: email
        in: query
        required: false
        description: user email
        schema:
          title: Email
          description: user email
          default: example@xxx.com
          type: string
      - name: user_name
        in: query
        required: false
        description: user name
        schema:
          title: User Name
          description: user name
          maxLength: 4
          minLength: 2
          type: string
      - name: age
        in: query
        required: true
        description: age
        schema:
          title: Age
          description: age
          exclusiveMinimum: 1
          exclusiveMaximum: 100
          type: integer
      - name: display_age
        in: query
        required: false
        description: display_age
        schema:
          title: Display Age
          description: display_age
          default: 0
          type: integer
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UserResponseModel3'
                - $ref: '#/components/schemas/ResponseFailModel'
  /api/depend:
    post:
      tags:
      - user
      - depend
      summary: ''
      description: Test Method:Post request, Pydantic Model
      operationId: POST.demo_get2test_depend
      parameters:
      - name: uid
        in: query
        required: true
        description: user id
        schema:
          title: Uid
          description: user id
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          type: integer
      - name: user_name
        in: query
        required: true
        description: user name
        schema:
          title: User Name
          description: user name
          maxLength: 4
          minLength: 2
          type: string
      - name: user-agent
        in: header
        required: true
        description: user agent
        schema:
          title: User-Agent
          description: user agent
          type: string
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ResponseUserModel'
                - $ref: '#/components/schemas/ResponseFailModel'
      requestBody:
        content:
          application/json:
            schema:
              title: DEMOGET2TESTDEPENDDynamicModel
              type: object
              properties:
                age:
                  title: Age
                  description: age
                  exclusiveMinimum: 1
                  exclusiveMaximum: 100
                  type: integer
              required:
              - age
  /api/post:
    post:
      tags:
      - user
      - post
      summary: ''
      description: Test Method:Post Pydantic Model
      operationId: POST.test_post
      parameters:
      - name: requestBody.content.<media-type>
        in: header
        required: true
        description: Content-Type
        schema:
          title: Content-Type
          description: Content-Type
          type: string
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ResponseUserModel'
                - $ref: '#/components/schemas/ResponseFailModel'
      requestBody:
        content:
          application/json:
            schema:
              title: TESTPOSTDynamicModel
              type: object
              properties:
                uid:
                  title: Uid
                  type: integer
                user_name:
                  title: User Name
                  type: string
                age:
                  title: Age
                  type: integer
                sex:
                  description: sex
                  allOf:
                  - $ref: '#/components/schemas/SexEnum'
              required:
              - uid
              - user_name
              - age
              - sex
  /api/cbv:
    post:
      tags:
      - user
      - post
      summary: ''
      description: test cbv post method
      operationId: post.test_cbv.post
      parameters:
      - name: user-agent
        in: header
        required: true
        description: ua
        schema:
          title: User-Agent
          description: ua
          type: string
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ResponseUserModel'
                - $ref: '#/components/schemas/ResponseFailModel'
      requestBody:
        content:
          application/json:
            schema:
              title: TESTCBV.POSTDynamicModel
              type: object
              properties:
                uid:
                  title: Uid
                  type: integer
                user_name:
                  title: User Name
                  type: string
                age:
                  title: Age
                  type: integer
              required:
              - uid
              - user_name
              - age
    get:
      tags:
      - user
      - get
      summary: ''
      description: Text Pydantic Model and Field
      operationId: get.test_cbv.get
      parameters:
      - name: age
        in: query
        required: true
        description: age
        schema:
          title: Age
          description: age
          exclusiveMinimum: 1
          exclusiveMaximum: 100
          type: integer
      - name: uid
        in: query
        required: true
        description: user id
        schema:
          title: Uid
          description: user id
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          type: integer
      - name: user_name
        in: query
        required: true
        description: user name
        schema:
          title: User Name
          description: user name
          maxLength: 4
          minLength: 2
          type: string
      - name: email
        in: query
        required: false
        description: email
        schema:
          title: Email
          description: email
          default: example@xxx.com
          type: string
      - name: user-agent
        in: header
        required: true
        description: ua
        schema:
          title: User-Agent
          description: ua
          type: string
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UserResponseModel2'
                - $ref: '#/components/schemas/ResponseFailModel'
  /api/get/{age}:
    get:
      tags:
      - user
      - get
      summary: ''
      description: Test Field
      operationId: GET.test_pait
      parameters:
      - name: uid
        in: query
        required: true
        description: user id
        schema:
          title: Uid
          description: user id
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          type: integer
      - name: user_name
        in: query
        required: true
        description: user name
        schema:
          title: User Name
          description: user name
          maxLength: 4
          minLength: 2
          type: string
      - name: email
        in: query
        required: false
        description: user email
        schema:
          title: Email
          description: user email
          default: example@xxx.com
          type: string
      - name: sex
        in: query
        required: false
        description: sex
        schema:
          title: SexEnum
          description: An enumeration.
          enum:
          - man
          - woman
          type: string
      - name: age
        in: path
        required: true
        description: age
        schema:
          title: Age
          description: age
          exclusiveMinimum: 1
          exclusiveMaximum: 100
          type: integer
      responses:
        200:
          description: success response|fail response
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UserResponseModel2'
                - $ref: '#/components/schemas/ResponseFailModel'
components:
  schemas:
    ResponseModel:
      title: ResponseModel
      type: object
      properties:
        code:
          title: Code
          description: api code
          default: 0
          type: integer
        msg:
          title: Msg
          description: api status msg
          default: success
          type: string
    ResponseFailModel:
      title: ResponseFailModel
      type: object
      properties:
        code:
          title: Code
          description: api code
          default: 1
          type: integer
        msg:
          title: Msg
          description: api status msg
          default: fail
          type: string
    ResponseUserDataModel:
      title: ResponseUserDataModel
      type: object
      properties:
        uid:
          title: Uid
          description: user id
          default: 666
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          type: integer
        user_name:
          title: User Name
          description: user name
          default: mock_name
          maxLength: 10
          minLength: 2
          type: string
        age:
          title: Age
          description: age
          default: 99
          exclusiveMinimum: 1
          exclusiveMaximum: 100
          type: integer
        sex:
          description: sex
          default: man
          allOf:
          - $ref: '#/components/schemas/SexEnum'
        content_type:
          title: Content Type
          description: content-type
          default: application/json
          type: string
    SexEnum:
      title: SexEnum
      description: An enumeration.
      enum:
      - man
      - woman
      type: string
    ResponseUserModel:
      title: ResponseUserModel
      type: object
      properties:
        code:
          title: Code
          description: api code
          default: 0
          type: integer
        msg:
          title: Msg
          description: api status msg
          default: success
          type: string
        data:
          $ref: '#/components/schemas/ResponseUserDataModel'
      required:
      - data
    UserResponseData2:
      title: UserResponseData2
      type: object
      properties:
        uid:
          title: Uid
          description: user id
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          example: 666
          type: integer
        user_name:
          title: User Name
          description: user name
          maxLength: 10
          minLength: 2
          example: mock_name
          type: string
        multi_user_name:
          title: Multi User Name
          description: user name
          maxLength: 4
          minLength: 2
          example: mock_name
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 4
        sex:
          description: sex
          example: man
          allOf:
          - $ref: '#/components/schemas/SexEnum'
        age:
          title: Age
          description: age
          exclusiveMinimum: 1
          exclusiveMaximum: 100
          example: 99
          type: integer
        email:
          title: Email
          description: user email
          example: example@so1n.me
          type: string
      required:
      - uid
      - user_name
      - multi_user_name
      - sex
      - age
      - email
    UserResponseModel2:
      title: UserResponseModel2
      type: object
      properties:
        code:
          title: Code
          description: api code
          default: 0
          type: integer
        msg:
          title: Msg
          description: api status msg
          default: success
          type: string
        data:
          $ref: '#/components/schemas/UserResponseData2'
      required:
      - data
    UserResponseData3:
      title: UserResponseData3
      type: object
      properties:
        uid:
          title: Uid
          description: user id
          exclusiveMinimum: 10
          exclusiveMaximum: 1000
          type: integer
        user_name:
          title: User Name
          description: user name
          maxLength: 4
          minLength: 2
          type: string
        age:
          title: Age
          description: age
          exclusiveMinimum: 1
          exclusiveMaximum: 100
          type: integer
        email:
          title: Email
          description: user email
          type: string
      required:
      - uid
      - user_name
      - age
      - email
    UserResponseModel3:
      title: UserResponseModel3
      type: object
      properties:
        code:
          title: Code
          description: api code
          default: 0
          type: integer
        msg:
          title: Msg
          description: api status msg
          default: success
          type: string
        data:
          $ref: '#/components/schemas/UserResponseData3'
      required:
      - data
